-- 사람테이블에 기본키 추가 1
CREATE TABLE PERSON (
	LAST_NAME VARCHAR(5) PRIMARY KEY,
	FIRST_NAME VARCHAR(5),
	NICKNAME VARCHAR(10)
);

-- 사람테이블에 기본키 추가 2
CREATE TABLE PERSON (
	LAST_NAME VARCHAR(5),
	FIRST_NAME VARCHAR(5),
	NICKNAME VARCHAR(10),
	PRIMARY KEY (LAST_NAME)
);

-- 기본키 삭제하기
ALTER TABLE PERSON DROP PRIMARY KEY;

-- 다시 기본키 추가하기
ALTER TABLE PERSON ADD PRIMARY KEY (LAST_NAME);

-- 기본키의 제약사항
-- 1. NULL을 입력할 수 없음
-- 2. 중복된 값을 입력할 수 없음

INSERT INTO PERSON
VALUES
(NULL, '짱구', '아들');

INSERT INTO PERSON
VALUES
('신', '짱구', '아들'),
('신', '짱아', '딸');

-- 복합키 추가하기
CREATE TABLE PERSON (
	LAST_NAME VARCHAR(5),
	FIRST_NAME VARCHAR(5),
	NICKNAME VARCHAR(10),
	PRIMARY KEY (LAST_NAME, FIRST_NAME)
);
-- 같은 성을 가지더라도, 조합이 다르기 때문에 중복이 안됨
INSERT INTO PERSON
VALUES
('신', '짱구', '아들'),
('신', '짱아', '딸');

-- 테이블 생성 순서: 부모 > 자식
CREATE TABLE DEPT (
	DEPT_NO INT PRIMARY KEY COMMENT '부서번호',
	DEPT_NAME VARCHAR(20) COMMENT '부서명'
);

CREATE TABLE EMP (
	EMP_NO INT PRIMARY KEY COMMENT '직원번호',
	EMP_NAME VARCHAR(20) COMMENT '직원명',
	DEPT_NO INT COMMENT '소속부서',
	FOREIGN KEY (DEPT_NO) REFERENCES DEPT(DEPT_NO)
);

-- 외래키 삭제하기
ALTER TABLE EMP DROP FOREIGN KEY emp_ibfk_1;

-- 다시 외래키 추가
ALTER TABLE EMP 
ADD FOREIGN KEY (DEPT_NO) REFERENCES DEPT(DEPT_NO);

-- 데이터 추가 순서: 부모 > 자식

INSERT INTO DEPT
VALUES
(1, '인사부'),(2, '연구부'),(3, '홍보부');

INSERT INTO EMP
VALUES
(1001, '정소화', 1),(1002, '김용욱', 2),(1003, '고명석', 3);

-- 부모 테이블에 없는 4번은 사용할 수 없음
INSERT INTO EMP
VALUES (1004, '김연아', 4);

-- 부서번호가 1번인 사원을 먼저 삭제해야함

DELETE
FROM EMP
WHERE DEPT_NO = 1;

DELETE
FROM DEPT
WHERE DEPT_NO = 1;

-- 데이터 삭제 순서: 자식 > 부모

DROP TABLE EMP;
DROP TABLE DEPT;

-- 테이블 삭제: 자식 > 부모


-- Q1
CREATE TABLE USERS (
	ID VARCHAR(20) PRIMARY KEY COMMENT '아이디',
	PASSWORD VARCHAR(200) COMMENT '패스워드',
	NAME VARCHAR(20) COMMENT '이름'
);
INSERT INTO USERS VALUES
('USER1','1234','둘리'),
('USER2','1234','도우너');

-- Q2
CREATE TABLE BOARD (
	NO INT AUTO_INCREMENT PRIMARY KEY COMMENT '글번호',
	TITLE VARCHAR(50) COMMENT '제목',
	CONTENT VARCHAR(255) COMMENT '내용',
	WRITER VARCHAR(20) COMMENT '작성자',
	REG_DATE DATETIME COMMENT '등록일',
	UPDATE_DATE DATETIME COMMENT '수정일',
	FOREIGN KEY (WRITER) REFERENCES USERS(ID)
);
INSERT INTO BOARD (TITLE, CONTENT, WRITER, REG_DATE, UPDATE_DATE)
VALUES
('안녕하세요~','안녕하세요~','USER1',NOW(),NOW()),
('안녕하세요~','안녕하세요~','USER2',NOW(),NOW()),
('출석체크합니다~','출석체크합니다~','USER1',NOW(),NOW()),
('출석체크합니다~','출석체크합니다~','USER2',NOW(),NOW()),
('등업해주세요~','등업해주세요~','USER2',NOW(),NOW());

-- Q3
SELECT U.ID , U.NAME , B.TITLE
FROM USERS U
JOIN BOARD B 
ON
U.ID = B.WRITER
ORDER BY U.ID;

-- Q4
SELECT U.ID AS '아이디' , U.NAME AS '이름', COUNT(*) AS '게시물건수'
FROM USERS U
JOIN BOARD B 
ON
U.ID = B.WRITER
GROUP BY U.NAME
ORDER BY U.ID;

-- Q5
CREATE TABLE CLASS (
	CLASS_NO INT PRIMARY KEY COMMENT '수업번호',
	CLASS_NAME VARCHAR(20) COMMENT '수업명'
);
INSERT INTO CLASS VALUES
(1, '수학'),
(2, '국어'),
(3, '영어');

-- Q6
CREATE TABLE STUDENT (
	STUDENT_NO INT PRIMARY KEY COMMENT '학생번호',
	STUDENT_NAME VARCHAR(20) COMMENT '학생명'
);
INSERT INTO STUDENT VALUES
(1001, '둘리'),
(1002, '또치'),
(1003, '도우너');

-- Q7
-- 외래키의 관계차수
-- 1:1 OR 1:N

-- STUDENT_CLASS의 외래키가 1:N 설정
-- 학생은 여러개의 과목을 수강할 수 있음

CREATE TABLE STUDENT_CLASS (
	ST_NO INT COMMENT '학생번호',
	CL_NO INT COMMENT '수강하는 수업의 번호',
	FOREIGN KEY (ST_NO) REFERENCES STUDENT(STUDENT_NO),
	FOREIGN KEY (CL_NO) REFERENCES CLASS(CLASS_NO)
);
INSERT INTO STUDENT_CLASS 
VALUES
(1001, 1),
(1001, 2),
(1002, 2),
(1002, 3),
(1003, 1),
(1003, 2),
(1003, 3);

-- Q8
SELECT C.CLASS_NO AS '수업번호', C.CLASS_NAME AS '수업명', GROUP_CONCAT(S.STUDENT_NAME) AS '수강생목록'
FROM STUDENT_CLASS SC
JOIN STUDENT S 
ON
SC.ST_NO = S.STUDENT_NO
JOIN CLASS C 
ON
SC.CL_NO = C.CLASS_NO
GROUP BY C.CLASS_NO;

-- Q9
SELECT C.CLASS_NO AS '과목번호', C.CLASS_NAME AS '과목명', COUNT(*) AS '수강생 수'
FROM STUDENT_CLASS SC
JOIN STUDENT S 
ON
SC.ST_NO = S.STUDENT_NO
JOIN CLASS C 
ON
SC.CL_NO = C.CLASS_NO
GROUP BY C.CLASS_NO
ORDER BY COUNT(*) DESC
LIMIT 1;










