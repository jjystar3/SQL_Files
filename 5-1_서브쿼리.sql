CREATE TABLE DEPT (
	DEPT_NO INT PRIMARY KEY COMMENT '부서번호',
	DEPT_NAME VARCHAR(20) COMMENT '부서명'
);
INSERT INTO DEPT 
VALUES
(1, '인사부'),
(2, '연구부'),
(3, '홍보부');

CREATE TABLE EMP (
	EMP_NO INT PRIMARY KEY COMMENT '직원번호',
	EMP_NAME VARCHAR(20) COMMENT '직원명',
	DEPT_NO INT COMMENT '소속부서',
	ADDRESS VARCHAR(50) COMMENT '주소',
	SALARY INT COMMENT '월급',
	HIRE_DT DATE COMMENT '입사일',
	FOREIGN KEY (DEPT_NO) REFERENCES DEPT(DEPT_NO)
);
INSERT INTO EMP
VALUES
(1001, '정소화', 1, '인천 연수구 송도동', 200, '2020-01-01'),
(1002, '김용욱', 2, '인천 남동구 구월동', 250, '2022-12-01'),
(1003, '고명석', 3, '인천 미추홀구 숭의동', 320, '2024-02-01'),
(1004, '김종하', 1, '인천 서구 가좌동', 300, '2020-02-01'),
(1005, '하유경', 2, '서울 관악구 온천동', 180, '2023-07-01'),
(1006, '손준우', 3, '서울 금천구 가산동', 400, '2023-05-01'),
(1007, '김미정', 1, '서울 서초구 반포동', 450, '2019-01-01'),
(1008, '이예성', 2, '부산 동구 초량동', 220, '2020-03-01'),
(1009, '김희영', 3, '부산 영도구 남항동', 370, '2022-09-01'),
(1010, '김채윤', 1, '부산 사하구 감천동', 190, '2023-03-01');

SELECT *
FROM EMP
WHERE SALARY > (SELECT AVG(SALARY) FROM EMP);

SELECT AVG(SALARY) FROM EMP;

SELECT DEPT_NO FROM EMP WHERE SALARY >= 400;

SELECT *
FROM DEPT D
WHERE DEPT_NO IN (SELECT DEPT_NO
FROM EMP
WHERE SALARY >= 400);


-- 2. FROM에 서브쿼리 넣기

SELECT T1.EMP_NO, T1.EMP_NAME, T1.ADDRESS
FROM(
	SELECT *
	FROM EMP
	WHERE ADDRESS LIKE '부산%'
) T1;


SELECT * FROM EMP WHERE ADDRESS LIKE '부산%';


-- 3. SELECT에 서브쿼리 넣기

SELECT D.DEPT_NO , D.DEPT_NAME ,
(
	SELECT COUNT(*)
	FROM EMP
	WHERE DEPT_NO = D.DEPT_NO
) AS '인원'
FROM DEPT D ;

-- 4. INSERT문 서브쿼리

-- 실습 테이블 생성 
CREATE TABLE TBL1 (
	TITLE VARCHAR(10),
	CONTENT VARCHAR(20)
);
INSERT INTO TBL1 VALUES
('1번', '내용~'),
('2번', '내용~'),
('3번', NULL);

CREATE TABLE TBL2 (
	TITLE VARCHAR(10),
	CONTENT VARCHAR(20)
);

-- 서브쿼리
SELECT * FROM TBL1 WHERE CONTENT IS NOT NULL;

-- 메인쿼리
INSERT INTO TBL2
(SELECT * FROM TBL1 WHERE CONTENT IS NOT NULL);

-- 서브쿼리
SELECT TITLE FROM TBL1 WHERE CONTENT IS NULL;

-- 메인쿼리
DELETE FROM TBL1 
WHERE TITLE = (SELECT TITLE FROM TBL1 WHERE CONTENT IS NULL);



-- Q1
SELECT EMP_NAME , ADDRESS , SALARY 
FROM EMP
WHERE SALARY <
(SELECT AVG(SALARY)FROM EMP);

-- Q2
SELECT DEPT_NO, EMP_NAME, SALARY
FROM EMP
WHERE SALARY IN 
(SELECT MIN(SALARY) FROM EMP GROUP BY DEPT_NO )
ORDER BY DEPT_NO ;

-- Q3
SELECT DEPT_NO , DEPT_NAME
FROM DEPT
WHERE DEPT_NO = (
	SELECT DEPT_NO
	FROM EMP
	GROUP BY DEPT_NO
	ORDER BY COUNT(*) DESC
	LIMIT 1
);

-- Q4
SELECT E.EMP_NO , E.EMP_NAME ,
(
	SELECT GROUP_CONCAT(P.EMP_NAME) FROM EMP P
	WHERE P.SALARY > E.SALARY
) AS '나보다급여가높은'
FROM EMP E;

-- Q5
SELECT DEPT_NO, EMP_NO, EMP_NAME, HIRE_DT 
FROM EMP 
WHERE HIRE_DT IN (
SELECT MIN(HIRE_DT) FROM EMP GROUP BY DEPT_NO
);

-- Q6
SELECT D.DEPT_NO ,D.DEPT_NAME , E.EMP_NO , E.EMP_NAME ,E.HIRE_DT 
FROM DEPT D
JOIN EMP E
ON
E.DEPT_NO = D.DEPT_NO
WHERE E.HIRE_DT = (SELECT MAX(HIRE_DT) FROM EMP);

-- Q7
CREATE TABLE TEST1 (
	EMP_NO INT PRIMARY KEY COMMENT '직원번호',
	EMP_NAME VARCHAR(20) COMMENT '직원명',
	DEPT_NO INT COMMENT '소속부서',
	ADDRESS VARCHAR(50) COMMENT '주소',
	SALARY INT COMMENT '월급'
);

-- Q8
INSERT INTO TEST1
(SELECT EMP_NO, EMP_NAME, DEPT_NO, ADDRESS, SALARY FROM EMP WHERE DEPT_NO = 1);

-- Q9
CREATE TABLE TEST2 (
	DEPT_NO INT PRIMARY KEY COMMENT '부서번호',
	DEPT_NAME VARCHAR(20) COMMENT '부서명',
	DEPT_CNT INT COMMENT '인원수',
	SALARY_SUM INT COMMENT '급여합계',
	SALARY_AVG INT COMMENT '평균급여'
);

-- Q10
INSERT INTO TEST2
(
SELECT D.DEPT_NO, D.DEPT_NAME, COUNT(*), SUM(E.SALARY), CEIL(AVG(E.SALARY))
FROM DEPT D
JOIN EMP E
ON
E.DEPT_NO = D.DEPT_NO
GROUP BY D.DEPT_NO
);























