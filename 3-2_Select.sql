-- 회원테이블에서 모든 데이터를 가져오기
SELECT * FROM CUSTOMER;

-- 회원테이블에서 회원번호와 이름만 가져오기
SELECT CUSTOMER_NO, NAME FROM CUSTOMER;

-- 비교연산자
SELECT * FROM CUSTOMER WHERE CUSTOMER_NO=1;
SELECT * FROM CUSTOMER WHERE CUSTOMER_NO!=1;
SELECT * FROM CUSTOMER WHERE CUSTOMER_NO<3;
SELECT * FROM CUSTOMER WHERE CUSTOMER_NO<=3;

-- 논리연산자
SELECT * FROM CUSTOMER WHERE NAME='둘리' AND ADDRESS='서울';
SELECT * FROM CUSTOMER WHERE ADDRESS ='인천' OR ADDRESS='서울';
SELECT * FROM CUSTOMER WHERE NOT ADDRESS='서울';

-- Q1
SELECT * FROM BOOK WHERE PRICE = 20000;
SELECT * FROM BOOK WHERE PRICE >= 10000 AND PRICE <= 30000;
SELECT * FROM BOOK WHERE TITLE = '역사1' OR TITLE = '역사2';
SELECT * FROM BOOK WHERE PUB_DATE < '2023-1-30' AND PRICE = 10000;

-- Q2
SELECT * FROM CONTACTS WHERE LAST_NAME = '이';
SELECT * FROM CONTACTS WHERE NOT LAST_NAME = '김';
SELECT * FROM CONTACTS WHERE FIRST_NAME = '윤서' OR FIRST_NAME = '수아';

-- Q3
SELECT * FROM CLASS WHERE CLASS_NO = 1;
SELECT * FROM CLASS WHERE CLASS_TIME >= '10:00:00';
SELECT CLASS_NAME FROM CLASS WHERE CLASS_TIME = "9:00" OR CLASS_TIME = "11:00";

-- Q4
SELECT MOVIE_NAME, SEAT_NO FROM RESERVATION WHERE `DATE` = '2024-4-21';
SELECT MOVIE_NAME FROM RESERVATION WHERE NOT MOVIE_NAME = '아바타';
SELECT USER_NAME FROM RESERVATION WHERE `DATE` = '2024-4-20' AND SEAT_NO = 'A2';

-- Q5
SELECT * FROM PRODUCT WHERE PRICE <= 2000;
SELECT * FROM PRODUCT WHERE CATEGORY = '과자' OR CATEGORY = '음료';
SELECT PRODUCT_NAME, PRICE FROM PRODUCT WHERE PRICE >= 4000;

-- 범위연산자
-- BETWEEN: 연속적, (숫자, 날짜 됨)
SELECT * FROM CUSTOMER WHERE CUSTOMER_NO BETWEEN 2 AND 4;
SELECT * FROM CUSTOMER WHERE CUSTOMER_NO NOT BETWEEN 2 AND 4;
-- IN: 불연속적, (숫자, 문자 됨)
SELECT * FROM CUSTOMER WHERE CUSTOMER_NO IN (1, 4);
SELECT * FROM CUSTOMER WHERE CUSTOMER_NO NOT IN (1, 4);
SELECT * FROM CUSTOMER WHERE NOT CUSTOMER_NO IN (1, 4);

-- Q1
SELECT * FROM BOOK WHERE PRICE BETWEEN 10000 AND 30000;
SELECT * FROM BOOK WHERE PUBLISHER IN ('상상마당','한빛미디어');

-- Q2
SELECT * FROM GIFT WHERE PRICE BETWEEN 30000 AND 60000;
SELECT * FROM GIFT WHERE `TYPE` IN ('식품', '생활용품');
SELECT * FROM GIFT WHERE PRICE IN (10000,30000,40000);

-- Q3
SELECT `DATE`, MOVIE_NAME, USER_NAME FROM RESERVATION WHERE MOVIE_NAME IN ('슬램덩크','영웅');
SELECT * FROM RESERVATION WHERE `DATE` = '2024-04-20' AND SEAT_NO IN ('A1','B1');

-- Q4
SELECT CATEGORY, PRODUCT_NAME, PRICE FROM PRODUCT WHERE PRICE BETWEEN 2000 AND 3000;
SELECT CATEGORY, PRODUCT_NAME, PRICE FROM PRODUCT WHERE CATEGORY IN ('음료','주류') AND PRICE < 3000;

-- 패턴연산자
SELECT * FROM CUSTOMER WHERE NAME LIKE '둘%';
SELECT * FROM CUSTOMER WHERE NAME LIKE '%길%';
SELECT * FROM CUSTOMER WHERE NAME LIKE '%치';

-- 빈값 체크 연산자
SELECT * FROM CUSTOMER WHERE ADDRESS IS NULL;
SELECT * FROM CUSTOMER WHERE ADDRESS IS NOT NULL;

-- Q1
SELECT * FROM BOOK WHERE TITLE LIKE '역사%' AND PUB_DATE = '2023-01-01';
SELECT PUBLISHER, TITLE, PRICE FROM BOOK WHERE PUBLISHER IS NOT NULL AND PRICE >= 20000;

-- Q2
SELECT LAST_NAME, FIRST_NAME, PHONE FROM CONTACTS WHERE PHONE LIKE '%4126';
SELECT LAST_NAME, FIRST_NAME, PHONE FROM CONTACTS WHERE PHONE LIKE '%2341%' AND LAST_NAME = '김';
SELECT * FROM CONTACTS WHERE EMAIL LIKE '%@naver.com%' AND PHONE IS NULL;

-- Q3
SELECT * FROM GIFT WHERE NAME LIKE '%용품%';
SELECT * FROM GIFT WHERE NAME LIKE '%세트' AND PRICE <= 20000;

-- Q4
SELECT * FROM RESERVATION WHERE SEAT_NO LIKE 'A%' AND MOVIE_NAME = '아바타';
SELECT * FROM RESERVATION WHERE SEAT_NO LIKE 'B%';

-- 데이터 정렬
SELECT * FROM CUSTOMER ORDER BY CUSTOMER_NO; -- ASC
SELECT * FROM CUSTOMER ORDER BY CUSTOMER_NO DESC;
SELECT * FROM CUSTOMER ORDER BY ADDRESS ASC;
SELECT * FROM CUSTOMER ORDER BY ADDRESS ASC, NAME DESC;

-- 데이터 LIMIT
SELECT * FROM CUSTOMER LIMIT 3;

-- 컬럼에 별명 붙이기
-- 별명은 자바프로그램에서 클래스 이름과 매칭시키는 경우
-- 또는 엑셀로 출력하는 경우에 사용한다
SELECT CUSTOMER_NO AS CODE FROM CUSTOMER;
SELECT CUSTOMER_NO AS '회원의 번호' FROM CUSTOMER;

